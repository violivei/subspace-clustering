/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package setup;

/**
 *
 * @author hans
 */
public class GDSSOMMWParameters extends MethodParameters {

    GDSSOMMW gdsommw;

    public GDSSOMMWParameters(GDSSOMMW gdsommw) {
        this.gdsommw = gdsommw;
        setupParameterRanges();
    }

    @Override
    void setupParameterRanges() {

////    Robot
        gdsommw.isSubspaceClustering = true;
        gdsommw.lp.setupRanges(0.001, 0.05, 0.025, ClusteringParameter.StepType.SUM);
        gdsommw.a_t.setupRanges(0.699, 0.999, 0.005, ClusteringParameter.StepType.SUM);

        parameterList.add(gdsommw.lp);
        parameterList.add(gdsommw.a_t); 
        
////  realdata
//        gdsommw.isSubspaceClustering = false;
//        gdsommw.lp.setupRanges(0.01, 0.1, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.80, 0.98, 0.02, ClusteringParameter.StepType.SUM);
//
//        parameterList.add(gdsommw.lp);
//        parameterList.add(gdsommw.a_t);   

////  test pendigits
//        gdsommw.isSubspaceClustering = false;
//        gdsommw.lp.setupRanges(0.01, 0.06, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.80, 0.98, 0.02, ClusteringParameter.StepType.SUM);
//
//        parameterList.add(gdsommw.lp);
//        parameterList.add(gdsommw.a_t); 
        
//////    Simulated
//        gdsommw.isSubspaceClustering = true;
//        gdsommw.lp.setupRanges(0.01, 0.06, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.969, 0.999, 0.005, ClusteringParameter.StepType.SUM);
//
//        parameterList.add(gdsommw.lp);
//        parameterList.add(gdsommw.a_t);    
        
////    Simulated (short range)
//        gdsommw.isSubspaceClustering = true;
//        gdsommw.lp.setupRanges(0.01, 0.06, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.974, 0.999, 0.005, ClusteringParameter.StepType.SUM);
//
//        parameterList.add(gdsommw.lp);
//        parameterList.add(gdsommw.a_t);    
        
//////    Test AT vs LP
//        gdsommw.isSubspaceClustering = true;
//        gdsommw.a_t.setupRanges(0.799, 0.999, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.lp.setupRanges(0.001, 0.051, 0.01, ClusteringParameter.StepType.SUM);
//        
//        parameterList.add(gdsommw.a_t);            
//        parameterList.add(gdsommw.lp);
        
//////    Fixed
//        gdsommw.isSubspaceClustering = true;
//        gdsommw.lp.setupRanges(0.02, 0.02, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.994, 0.994, 0.005, ClusteringParameter.StepType.SUM);

////      Simulated
//        gdsommw.isSubspaceClustering = true;
//        gdsommw.lp.setupRanges(0.01, 0.06, 0.01, ClusteringParameter.StepType.SUM);
//        gdsommw.a_t.setupRanges(0.904, 0.999, 0.005, ClusteringParameter.StepType.SUM);
//        gdsommw.e_b.setupRanges(0.05, 0.0005, 0.1, ClusteringParameter.StepType.MULT);
//        gdsommw.dsbeta.setupRanges(0.25, 0.0025, 0.1, ClusteringParameter.StepType.MULT);

//        parameterList.add(gdsommw.e_b);
//        parameterList.add(gdsommw.dsbeta);
    }

    public static void main(String args[]) {

        /*
         * From	Offset	Op	Steps	To avgerageDimensions	1	2	+	38	75 alpha	2	2	*	6
         * 64 Total number of experiments: 228
         */
        GDSSOMMW som = new GDSSOMMW();
        GDSSOMMWParameters dssomParameters = new GDSSOMMWParameters(som);

        dssomParameters.printParameterRanges();
        System.out.print("Exp\t");
        dssomParameters.printParameterNames();
        System.out.println();
        while (!dssomParameters.hasFinished()) {
            System.out.print(dssomParameters.getExperimentNumber() + "\t");
            dssomParameters.printParameterValues();
            System.out.println();
            dssomParameters.setupNextParameters();
        }
    }

    @Override
    void setupParameterValues() {
    }
}
